<?php

namespace App\Http\Controllers\Treasurer;

use App\Http\Controllers\Controller;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Config;
use Illuminate\Support\Facades\Redis;
use Exception;
use Illuminate\Support\Facades\Session;

class CashBookController extends Controller
{
    public function index(Request $request)
    {
        $checkPermission = $this->checkPermission( ['OWNER', 'VIEW_ALL', 'ACCOUNTING_MANAGER', 'ADDITION_FEE_MANAGER']);
        if($checkPermission[0] === false) {
            $notify_permission = $checkPermission[1];
            return view('errors.403', compact('notify_permission'));
        }
        $checkLevel = $this->checkLevel(1);
        if($checkLevel[0] === false) {
            $notify_permission = $checkLevel[1];
            return view('errors.403_1', compact('notify_permission'));
        }
        $active_nav = 'Sổ quỹ';
        return view('treasurer.cash_book.index', compact('active_nav'));
    }

    public function time(Request $request)
    {
        $isCountToRevenue = ENUM_GET_ALL;
        $branch = ENUM_GET_ALL;
        $date = $request->get('date');
        $project = ENUM_PROJECT_ID_JAVA_DASHBOARD;
        $method = ENUM_METHOD_GET;
        $api = sprintf(API_CASH_BOOK_GET_TIME, $branch, $date, $isCountToRevenue);
        $body = null;
        $config = $this->callApiGatewayTemplate($project, $method, $api, $body);
        try {
            $config['data']['in'] = $this->numberFormat($config['data']['in']);
            $config['data']['out'] = $this->numberFormat($config['data']['out']);
            $config['data']['openning_amount'] = $this->numberFormat($config['data']['openning_amount']);
            $config['data']['closing_amount'] = $this->numberFormat($config['data']['closing_amount']);
            return $config;
        } catch (Exception $e) {
            return $this->catchTemplate($config, $e);
        }
    }

    public function data(Request $request)
    {
        $type = $request->get('type');
        $branchID = $request->get('branch_id');
        $restaurantBrandID = $request->get('restaurant_brand_id');
        $from = $request->get('from');
        $to = $request->get('to');
        $isCountToRevenue = $request->get('revenue');
        $objectType = ENUM_GET_ALL;
        $additionFeeReasonID = ENUM_GET_ALL;
        $additionFeeReasonTypeID = ENUM_GET_ALL;
        $isTakeAutoGenerated = ENUM_GET_ALL;
        $status = Config::get('constants.type.AdditionFeeStatusEnum.NOT_CANCEL');
        $page = ($request->get('start') + $request->get('length')) / $request->get('length');
        $restaurantBudgetID = ENUM_DIS_SELECTED;
        $orderSessionID = ENUM_GET_ALL;
        $limit = 100;
        $EmployeeID = ENUM_GET_ALL;
        $reportType = ENUM_GET_ALL;
        $autoGeneratedType = ENUM_GET_ALL;
        $key = $this->keySearch(($request->get('search'))['value']);
        $paymentMethodID = ENUM_GET_ALL;
        $objectID = ENUM_GET_ALL;
        $debt = ENUM_GET_ALL;
        $isRestaurantBudgetClosed = Config::get('constants.type.AdditionFeeStatusEnum.UNKNOW');
        $api = sprintf(API_REASON_ADDITION_FEE_GET_DATA, $restaurantBrandID, $branchID, $page, $restaurantBudgetID, $from, $to, $type, $isTakeAutoGenerated, $orderSessionID, $EmployeeID, $limit, $reportType, $autoGeneratedType, $objectType, $additionFeeReasonID, $additionFeeReasonTypeID, $status, $isCountToRevenue, $key, $paymentMethodID, $objectID, $debt, $isRestaurantBudgetClosed);
        $body = null;
        $requestList = [
            'project' => ENUM_PROJECT_ID_JAVA_DASHBOARD,
            'method' => ENUM_METHOD_GET,
            'api' => $api,
            'body' => $body,
        ];
        $api = sprintf(API_REASON_ADDITION_FEE_GET_TOTAL_TAB, $branchID, $from, $to, $type, $key, $status, $isCountToRevenue);
        $body = null;
        $requestTab = [
            'project' => ENUM_PROJECT_ID_JAVA_DASHBOARD,
            'method' => ENUM_METHOD_GET,
            'api' => $api,
            'body' => $body,
        ];
        $configAll = $this->callApiMultiGatewayTemplate([$requestList, $requestTab]);
        try {
            $config = $configAll[0];
            $detail = TEXT_DETAIL;
            $domain = Session::get(SESSION_NODE_KEY_BASE_URL_ADS);
            for ($i = 0; $i < count($config['data']['list']); $i++) {
                $config['data']['list'][$i]['index'] = ($page - 1) * $limit + $i + 1;
                $config['data']['list'][$i]['amount'] = $this->numberFormat($config['data']['list'][$i]['amount']);
                $config['data']['list'][$i]['fee_month'] = substr($config['data']['list'][$i]['fee_month'], 0, 10);
                $config['data']['list'][$i]['employee']['name'] = '<img onerror="imageDefaultOnLoadError($(this))" src="' . $domain . $config['data']['list'][$i]['employee']['avatar'] . '" class="img-inline-name-data-table">
                         <label class="name-inline-data-table">' . $config['data']['list'][$i]['employee']['name'] . '<br>
                              <label class="department-inline-name-data-table"><i class="zmdi zmdi-account-circle"></i>' . $config['data']['list'][$i]['employee']['role_name'] . '</label>
                         </label>';

                if ($type == Config::get('constants.type.addition_fee.IN')) {
                    $config['data']['list'][$i]['action'] = '<div class="btn-group btn-group-sm">
                            <button type="button" class="btn seemt-btn-hover-blue waves-effect waves-light" data-toggle="tooltip" data-placement="top" data-original-title="' . $detail . '" onclick="openModalDetailReceiptsBill(' . $config['data']['list'][$i]['id'] . ',' . $config['data']['list'][$i]['branch']['id'] . ')"><i class="fi-rr-eye"></i></button>
                           </div>';
                }
                if ($type == Config::get('constants.type.addition_fee.OUT')) {
                    $config['data']['list'][$i]['action'] = '<div class="btn-group btn-group-sm">
                                                            <button type="button" class="btn seemt-btn-hover-blue waves-effect waves-light" data-toggle="tooltip" data-placement="top" data-original-title="' . $detail . '" onclick="openModalDetailPaymentBill(' . $config['data']['list'][$i]['id'] . ',' . $config['data']['list'][$i]['branch']['id'] . ')"><i class="fi-rr-eye"></i></button>
                                                         </div>';
                }
                if ($config['data']['list'][$i]['is_count_to_revenue'] === (int)Config::get('constants.type.checkbox.SELECTED')) {
                    $config['data']['list'][$i]['is_count_to_revenue_name'] = '<label>' . $config['data']['list'][$i]['code'] . '<br> <div class="tag seemt-green seemt-bg-green d-flex">
                                                                                                                                            <i class="fi-rr-hastag"></i>
                                                                                                                                            <label class="m-0">Hạch toán</label>
                                                                                                                                        </div></label>';

                } else {
                    $config['data']['list'][$i]['is_count_to_revenue_name'] = '<label>' . $config['data']['list'][$i]['code'] . '</label>';
                }
                switch ($config['data']['list'][$i]['addition_fee_status']) {
                    case Config::get('constants.type.AdditionFeeStatusEnum.WAITING_PAYMENT'):
                        $config['data']['list'][$i]['status_text'] = '<div class="seemt-orange seemt-border-orange status-new">
                                                                        <i class="fi-rr-time-quarter-to" style=" font-size: 14px; vertical-align: middle; "></i>
                                                                        <label class="m-0">' . TEXT_PAYMENT_APPROVED . '</label>
                                                                    </div>';
                        break;
                    case Config::get('constants.type.AdditionFeeStatusEnum.ORDER_PAYMENT'):
                    case Config::get('constants.type.AdditionFeeStatusEnum.CONFIRMED'):
                        $config['data']['list'][$i]['status_text'] = '<div class="seemt-green seemt-border-green status-new">
                                                                        <i class="fi-rr-time-quarter-to" style=" font-size: 14px; vertical-align: middle; "></i>
                                                                        <label class="m-0">' . TEXT_SALARY_CONFIRMED . '</label>
                                                                    </div>';
                        break;
                    case Config::get('constants.type.AdditionFeeStatusEnum.CANCEL'):
                        $config['data']['list'][$i]['status_text'] = '<div class="seemt-red seemt-border-red status-new">
                                                                        <i class="fi-rr-time-quarter-to" style=" font-size: 14px; vertical-align: middle; "></i>
                                                                        <label class="m-0">' . TEXT_CANCELED_ENUM . '</label>
                                                                    </div>';
                        break;
                    case Config::get('constants.type.AdditionFeeStatusEnum.PAID'):
                        $config['data']['list'][$i]['status_text'] = '<div class="seemt-orange seemt-border-orange status-new">
                                                                        <i class="fi-rr-time-quarter-to" style=" font-size: 14px; vertical-align: middle; "></i>
                                                                        <label class="m-0">' . TEXT_WAITING . '</label>
                                                                    </div>';
                        break;
                    case Config::get('constants.type.AdditionFeeStatusEnum.CANCEL_PAYMENT'):
                        $config['data']['list'][$i]['status_text'] = '<div class="seemt-gray-w400 seemt-border-gray status-new">
                                                                        <i class="fi-rr-time-quarter-to" style=" font-size: 14px; vertical-align: middle; "></i>
                                                                        <label class="m-0">' . TEXT_CANCEL_PAYMENT . '</label>
                                                                    </div>';
                        break;
                    case Config::get('constants.type.AdditionFeeStatusEnum.CANCEL_PAYMENT_REFUNDED'):
                        $config['data']['list'][$i]['status_text'] = '<div class="seemt-red seemt-border-red status-new">
                                                                        <i class="fi-rr-time-quarter-to" style=" font-size: 14px; vertical-align: middle; "></i>
                                                                        <label class="m-0">' . Config::get('constants.TEXT_CANCEL_PAYMENT_REFUNDED') . '</label>
                                                                    </div>';
                        break;
                    case Config::get('constants.type.AdditionFeeStatusEnum.CONFIRM_PAYMENT'):
                        $config['data']['list'][$i]['status_text'] = '<div class="seemt-orange seemt-border-orange status-new">
                                                                        <i class="fi-rr-time-quarter-to" style=" font-size: 14px; vertical-align: middle; "></i>
                                                                        <label class="m-0">' . TEXT_CONFIRMED_PAYMENT . '</label>
                                                                    </div>';
                        break;
                    default:
                        $config['data']['list'][$i]['status_text'] = '<div class="seemt-gray-w400 seemt-border-gray status-new">
                                                                        <i class="fi-rr-time-quarter-to" style=" font-size: 14px; vertical-align: middle; "></i>
                                                                        <label class="m-0">' . TEXT_OTHER . '</label>
                                                                    </div>';
                }
                if (mb_strlen($config['data']['list'][$i]['object_name']) > 20) $config['data']['list'][$i]['object_name'] = mb_substr($config['data']['list'][$i]['object_name'], 0, 17) . '...';
                if (mb_strlen($config['data']['list'][$i]['addition_fee_reason_name']) > 20) $config['data']['list'][$i]['addition_fee_reason_name'] = mb_substr($config['data']['list'][$i]['addition_fee_reason_name'], 0, 17) . '...';
            }
            $dataTable = array(
                'draw' => $request->get('draw'),
                'recordsTotal' => $config['data']['total_record'],
                'recordsFiltered' => $config['data']['total_record'],
                'data' => $config['data']['list'],
                'total_record' => $this->numberFormat($config['data']['total_record']),
                'key' => $key,
                'page' => $page,
                'config' => $configAll
            );
            $config = $configAll[1];
            $dataTable['in_count'] = $this->numberFormat($config['data']['addition_fee_in']);
            $dataTable['out_count'] = $this->numberFormat($config['data']['addition_fee_out']);
            $dataTable['total_in_amount'] = $this->numberFormat($config['data']['total_amount']);
            $dataTable['total_out_amount'] = $this->numberFormat($config['data']['total_amount']);
            return json_encode($dataTable);
        } catch (Exception $e) {
            return $this->catchTemplate($config, $e);
        }
    }

    public function create(Request $request)
    {
        $branch = ENUM_GET_ALL;
        $closingAmount = $request->get('closing_amount');
        $in = $request->get('in');
        $out = $request->get('out');
        $orderTotalAmount = $request->get('order_total_amount');
        $openningAmount = $request->get('openning_amount');
        $date = $request->get('date');
        $project = ENUM_PROJECT_ID_JAVA_DASHBOARD;
        $method = ENUM_METHOD_POST;
        $api = sprintf(API_CASH_BOOK_POST_CREATE);
        $body = [
            'branch_id' => $branch,
            'closing_amount' => $closingAmount,
            'in' => $in,
            'out' => $out,
            'order_total_amount' => $orderTotalAmount,
            'openning_amount' => $openningAmount,
            'date' => $date,
        ];
        return $this->callApiGatewayTemplate($project, $method, $api, $body);
    }
}
